- @meta = { :description => "#{@forum.name.capitalize} discussion forum.",:keywords => "#{@forum.tags.join(', ') if @forum.tags}",:robots => configatron.robots_meta_show_content}
- @section = 'forums'
- @page_title = @forum.name

-box do 
  - unless @forum.description.blank?
    =raw @forum.description_html
  %p.subtitle
    %a{:href => forum_sb_posts_path(@forum, :format => :rss)}
      %i.icon-rss
    = pluralize @forum.topics_count, :topic.l 
    , 
    = pluralize @forum.sb_posts_count, :post.l

  
  - if @forum.moderators.any?
    = "#{:moderators.l}:"
    %ul.flat
      - @forum.moderators.each do |user|
        %li= link_to user.display_name, user_path(user)
    
  %br.clear

  - if @topics.total_count > 1
    - if logged_in?
      %i.icon-plus.pull-left
      = link_to :post_a_new_topic.l, new_forum_topic_path(@forum)
  
    =paginate @topics

  - unless @topics.empty?
    %table.table.table-bordered.table-striped
      %tr
        %th
        %th= :topics.l
        %th= :posts.l
        %th= :view_count.l 
        %th= :last_post.l
        
      - for topic in @topics
        %tr
          %td.c1{:style=>"padding:5px; width:16px;"}
            - icon, color, post = icon_and_color_and_post_for topic

            - if recent_topic_activity(topic)
              %span.badge.badge-warning
                %i.icon-fire.icon-white
          %td.c2
            = :sticky.l+": <strong>".html_safe if topic.sticky?
            = link_to h(topic.title), forum_topic_path(@forum, topic), :class => "entry-title", :rel => "bookmark"
            = "</strong>".html_safe if topic.sticky?
            - if topic.paged? 
              %small= link_to :last.l, forum_topic_path(:forum_id => @forum, :id => topic, :page => topic.last_page)
          %td.ca.inv.stat= topic.sb_posts_count
          %td.ca.inv.stat= number_with_delimiter(topic.views)
          %td.lp
            %abbr.updated{:title=>"#{topic.replied_at.xmlschema}"}= time_ago_in_words(topic.replied_at)
            %span.author
              %strong.fn
                =:by.l :login => topic.replied_by_user.display_name
            %span= link_to :view.l, forum_topic_path(:forum_id => @forum, :id => topic, :page => topic.last_page, :anchor => "posts-#{topic.last_post_id}")
  
  - if @topics.total_count > 1
    = paginate @topics

  - if logged_in?
    %i.icon-plus.pull-left
    = link_to :post_a_new_topic.l.downcase.capitalize, new_forum_topic_path(@forum)
  - else
    %i.icon-plus.pull-left
    = link_to :log_in_to_create_a_new_topic.l.downcase.capitalize, new_forum_topic_path(@forum)

  - if @topics.size < 10
    - @related = Post.limit(10).tagged_with(@forum.tag_list, :any => true)
    - unless @related.empty?
      %table.wide.topics{:border=>"0", :cellspacing=>"0", :cellpadding=>"0"}
        %tr
          %th.la{:colspan=>"2"}= :this_forum_is_still_getting_started.l
          %th{:width=>"1%"}= :comments.l
          %th{:width=>"1%"}= :view_count.l
          %th.la= :author.l
          -@related.each do |post|
            = render :partial => 'sb_posts/dummy_forum_post', :locals => {:post => post}
