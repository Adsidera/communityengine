COMMUNITY ENGINE
================
Requirements:
  - RAILS VERSION 2.0.2 
  - The engines plugin (http://rails-engines.org/news/2007/12/11/engines-2-0-ish/)
  - An S3 account (for uploading photos)
  - ImageMagick 
  - Several gems:
    rmagick
    aws-s3
    hpricot
    mime-types    
    htmlentities

GETTING COMMUNITY ENGINE RUNNING
==================================================================
1. rails site_name (create a rails app if you don't have one already)
2. Install the engines plugin (http://rails-engines.org/news/2007/12/11/engines-2-0-ish/)
3. Put community engine plugin into plugins directory (use one of the following methods):

    Download a tarball from https://github.com/bborn/communityengine/tarball/master and unpack it into /vendor/plugins/community_engine
    # If you're not using git, and just want to add the source files.

    git clone --depth 1 git@github.com:bborn/communityengine.git vendor/plugins/community_engine
    # This will make a shallow clone of the community_engine repository
    
    # If you want to keep your community_engine plugin up to date using git, you'll have to add it as a submodule: 
    # http://www.kernel.org/pub/software/scm/git/docs/user-manual.html#submodules

4. Create your database and modify your config/database.yml appropriately.
5. Delete your application.rb and application_helper.rb
6. Delete public/index.html (if you haven't already)
7. Modify your environment.rb and environment files as indicated below
8. Modify your routes.rb as indicated below
9. Add amazon_s3.yml (required) to root config directory (examples are in /sample_files). You'll need an S3 account for photo uploading.
10. Generate community engine migrations: 
    script/generate plugin_migration
11. rake db:migrate
12. Run tests (if you want): 
    rake test
    rake community_engine:test
13. Start your server and check out your site! 
    mongrel_rails start
    or
    ./script/server


## Modifying your environment.rb and environment files ##
environment.rb should look something like this:
===============================================================
RAILS_GEM_VERSION = '2.0.2' unless defined? RAILS_GEM_VERSION
require File.join(File.dirname(__FILE__), 'boot')
require File.join(File.dirname(__FILE__), '../vendor/plugins/engines/boot')

Rails::Initializer.run do |config|
  #resource_hacks required here to ensure routes like /:login_slug work
  #if removed, defaults to /users/:login_slug
  config.plugins = [:engines, :community_engine, :resource_hacks, :white_list, :all]
  config.plugin_paths += ["#{RAILS_ROOT}/vendor/plugins/community_engine/engine_plugins"]
  
  ... Your stuff here ...
  
end
# Include your application configuration below
require "#{RAILS_ROOT}/vendor/plugins/community_engine/engine_config/community_engine.rb"


## Modifying each environment file ##
development.rb, production.rb, and test.rb should include something like:
===============================================================
APP_URL = "http://localhost:3000" (or whatever your URL will be in production)


## Modifying your routes.rb ##
Adding this after any of your own existing routes: 
===============================================================
map.from_plugin :community_engine  


## CONFIGURATION ##
Create an application.yml file in RAILS_ROOT/config (OPTIONAL)
===============================================================
The application configuration defined in this file overrides the one defined in /community_engine/engine_config/application.yml
This is where you can change commonly used config variables, like AppConfig.community_name, etc.
This YAML file will get converted into an OpenStruct, giving you things like AppConfig.whatever_variable_you_like


## Create an s3.yml file in RAILS_ROOT/config (OPTIONAL) ##
===============================================================
CommunityEngine includes the s3.rake tasks for backing up your site to S3. If you plan on using these, you'll need to add a file
in RAILS_ROOT/config/s3.yml. (Sample in engine_config/s3.yml)


## Other notes ##
===============================================================
If you have an existing application.rb, nothing will work unless you modify it to 
include the methods in community_engine's application.rb (your application.rb takes precedence)

To customize your application, just create views to override those in community_engine/app/views. 
For example, you could create RAILS_ROOT/app/views/layouts/application.haml and have that include your own stylesheets, etc.
