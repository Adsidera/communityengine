COMMUNITY ENGINE
================
Requirements:
  - RAILS VERSION 2.0.2 
  - The engines plugin (http://rails-engines.org/news/2007/12/11/engines-2-0-ish/)
  - ImageMagick 
  - Several gems:
    rmagick
    hpricot
    mime-types    
    htmlentities

GETTING COMMUNITY ENGINE RUNNING
==================================================================
1. rails site_name (create a rails app if you don't have one already)
2. Install the engines plugin (http://rails-engines.org/news/2007/12/11/engines-2-0-ish/)
3. Put community engine plugin into plugins directory (use one of the following methods):

    Download a tarball from https://github.com/bborn/communityengine/tarball/master and unpack it into /vendor/plugins/community_engine
    # If you're not using git, and just want to add the source files.

    git clone --depth 1 git@github.com:bborn/communityengine.git vendor/plugins/community_engine
    # This will make a shallow clone of the community_engine repository
    
    # If you want to keep your community_engine plugin up to date using git, you'll have to add it as a submodule: 
    # http://www.kernel.org/pub/software/scm/git/docs/user-manual.html#submodules

4. Create your database and modify your config/database.yml appropriately.
5. Delete public/index.html (if you haven't already)
6. Modify your environment.rb and environment files as indicated below.
7. Modify your routes.rb as indicated below.
8. Generate community engine migrations: 
    script/generate plugin_migration
9. rake db:migrate
10. Run tests (if you want): 
    rake test
    rake community_engine:test
11. Start your server and check out your site! 
    mongrel_rails start
    or
    ./script/server



## Modifying your environment.rb and environment files ##
environment.rb should look something like this:
===============================================================
RAILS_GEM_VERSION = '2.0.2' unless defined? RAILS_GEM_VERSION
require File.join(File.dirname(__FILE__), 'boot')
require File.join(File.dirname(__FILE__), '../vendor/plugins/engines/boot')

Rails::Initializer.run do |config|
  #resource_hacks required here to ensure routes like /:login_slug work
  #if removed, defaults to /users/:login_slug
  config.plugins = [:engines, :community_engine, :resource_hacks, :white_list, :all]
  config.plugin_paths += ["#{RAILS_ROOT}/vendor/plugins/community_engine/engine_plugins"]
  
  ... Your stuff here ...
  
end
# Include your application configuration below
require "#{RAILS_ROOT}/vendor/plugins/community_engine/engine_config/community_engine.rb"


## Modifying each environment file ##
development.rb, production.rb, and test.rb should include something like:
===============================================================
APP_URL = "http://localhost:3000" (or whatever your URL will be in production)


## Modifying your routes.rb ##
Adding this after any of your own existing routes: 
===============================================================
map.from_plugin :community_engine  


## CONFIGURATION (OPTIONAL) ##
To override the default configuration, create an application.yml file in RAILS_ROOT/config 
===============================================================
The application configuration defined in this file overrides the one defined in /community_engine/engine_config/application.yml
This is where you can change commonly used configuration variables, like AppConfig.community_name, etc.
This YAML file will get converted into an OpenStruct, giving you things like AppConfig.community_name, AppConfig.support_email, etc.

## PHOTO UPLOADING  ##
By default CommunityEngine uses the filesystem to store photos.
To use Amazon S3 as the backend for your file uploads, you'll need the aws-s3 gem installed, and you'll need to add a file called
amazon_s3.yml to the application's root config directory (examples are in /community_engine/sample_files). 
You'll need to change your configuration in you application.yml to tell CommunityEngine to use s3 as the photo backend.
You'll need an S3 account for S3 photo uploading.    


## Create an s3.yml file in RAILS_ROOT/config (OPTIONAL) ##
===============================================================
CommunityEngine includes the s3.rake tasks for backing up your site to S3. If you plan on using these, you'll need to add a file
in RAILS_ROOT/config/s3.yml. (Sample in engine_config/s3.yml)


## Other notes ##
===============================================================
To customize your application, just create views to override those in community_engine/app/views. 
For example, you could create RAILS_ROOT/app/views/layouts/application.html.haml and have that include your own stylesheets, etc.

You can also override CommunityEngine's controllers by creating identically-named controllers in your applications app/controllers directory.